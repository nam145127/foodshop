document.addEventListener("DOMContentLoaded", async () => {
  const categoryContainer = document.getElementById("category-list");
  const searchInput = document.getElementById("search-input");
  const suggestList = document.getElementById("suggest-list");
  const popularFoods = document.getElementById("popular-foods");
  const comboList = document.getElementById("combo-list");

  // üüß Danh s√°ch danh m·ª•c c·ªë ƒë·ªãnh
  const categories = [
    { id: 1, name: 'üçï Pizza', img: 'https://res.cloudinary.com/dacnobglx/image/upload/v1745028078/cat1_sg5wwo.png' },
    { id: 2, name: 'üçî Hamburger', img: 'https://res.cloudinary.com/dacnobglx/image/upload/v1745028078/cat2_oeoxas.png' },
    { id: 3, name: 'ü•§ ƒê·ªì u·ªëng', img: 'https://res.cloudinary.com/dacnobglx/image/upload/v1745028078/cat7_ukwqbi.png' },
    { id: 4, name: 'üå≠ Hotdog', img: 'https://res.cloudinary.com/dacnobglx/image/upload/v1745028078/cat6_s9txhu.png' },
    { id: 5, name: 'üçó G√†', img: 'https://res.cloudinary.com/dacnobglx/image/upload/v1745028078/cat3_sgqee1.png' },
    { id: 6, name: 'üçú M√¨', img: 'https://res.cloudinary.com/dacnobglx/image/upload/v1745028078/cat4_pronke.png' },
    { id: 7, name: 'üçö C∆°m', img: 'https://res.cloudinary.com/dacnobglx/image/upload/v1745028078/cat8_bio6ym.png' },
    { id: 8, name: 'üçü ƒÇn v·∫∑t', img: 'https://res.cloudinary.com/dacnobglx/image/upload/v1745028078/cat5_fyhqvy.png' },
    { id: 9, name: 'üç∞ Tr√°ng mi·ªáng', img: 'https://res.cloudinary.com/dacnobglx/image/upload/v1745028078/cat9_nv5sya.png' }
  ];

  // üü® Hi·ªÉn th·ªã danh m·ª•c
  categories.forEach(cat => {
    const div = document.createElement("div");
    div.className = "category-item flex flex-col items-center p-2 bg-orange-50 rounded-lg cursor-pointer";
    div.innerHTML = `
      <img src="${cat.img}" alt="${cat.name}" class="w-20 h-20 object-cover rounded-full border-2 border-orange-400 shadow" />
      <span class="mt-2 text-sm font-semibold text-orange-800">${cat.name}</span>
    `;
    div.addEventListener("click", () => {
      window.location.href = `menu.html?category=${cat.id}`;
    });
    categoryContainer.appendChild(div);
  });

  // üîç T√¨m ki·∫øm m√≥n
  window.handleSearch = () => {
    const keyword = searchInput.value.trim();
    if (keyword) {
      window.location.href = `menu.html?search=${encodeURIComponent(keyword)}`;
    }
  };

  // üü© G·ª£i √Ω theo th·ªùi gian (s√°ng/tr∆∞a/t·ªëi)
  async function loadSuggestions() {
    const hour = new Date().getHours();
    let time = "trua";
    if (hour < 10) time = "sang";
    else if (hour >= 17) time = "toi";

    try {
      const res = await fetch(`http://localhost:3000/api/foods/suggest?time=${time}`);
      const foods = await res.json();
      renderFoods(suggestList, foods);
    } catch (err) {
      console.error("L·ªói g·ª£i √Ω:", err);
    }
  }

  // üî• M√≥n b√°n ch·∫°y
  async function loadPopular() {
    try {
      const res = await fetch("http://localhost:3000/api/foods/popular");
      const foods = await res.json();
      renderFoods(popularFoods, foods);
    } catch (err) {
      console.error("L·ªói m√≥n b√°n ch·∫°y:", err);
    }
  }

  // üéÅ Combo ti·∫øt ki·ªám
  async function loadCombos() {
    try {
      const res = await fetch("http://localhost:3000/api/foods/combos");
      const foods = await res.json();
      renderFoods(comboList, foods);
    } catch (err) {
      console.error("L·ªói combo:", err);
    }
  }

  // üßä Hi·ªÉn th·ªã danh s√°ch m√≥n ƒÉn (g·ª£i √Ω / hot / combo)
  function renderFoods(container, foods) {
    container.innerHTML = "";
    if (!foods || foods.length === 0) {
      container.innerHTML = `<p class="text-red-500 col-span-full">Kh√¥ng c√≥ m√≥n ƒÉn n√†o.</p>`;
      return;
    }

    foods.forEach(food => {
      const imgSrc = food.image_url || food.img || "https://via.placeholder.com/150";
      const div = document.createElement("div");
      div.className = "food-card p-3 bg-white rounded shadow hover:shadow-md transition";
      div.innerHTML = `
        <img src="${imgSrc}" alt="${food.name}" class="w-full h-40 object-cover mb-2 rounded" />
        <h3 class="font-semibold truncate">${food.name}</h3>
        <p class="text-orange-600 font-bold">${formatPrice(food.price)}‚Ç´</p>
        <button class="add-to-cart-btn mt-2 w-full bg-orange-500 text-white rounded px-2 py-1 hover:bg-orange-600"
          data-id="${food.id}"
          data-name="${food.name}"
          data-price="${food.price}">
          Th√™m v√†o gi·ªè
        </button>
      `;
      div.querySelector(".add-to-cart-btn").addEventListener("click", (e) => {
        const btn = e.currentTarget;
        const foodItem = {
          id: parseInt(btn.dataset.id),
          name: btn.dataset.name,
          price: parseInt(btn.dataset.price)
        };
        addToCart(foodItem);
      });
      container.appendChild(div);
    });
  }

  function formatPrice(price) {
    return Number(price).toLocaleString("vi-VN");
  }

  // üõí Th√™m v√†o gi·ªè
  function addToCart(food) {
  let cart = JSON.parse(localStorage.getItem("cart")) || [];
  const found = cart.find(item => item.id === food.id);
  if (found) {
    found.quantity++;
  } else {
    cart.push({
      id: food.id,
      name: food.name,
      price: food.price,
      quantity: 1
    });
  }
  localStorage.setItem("cart", JSON.stringify(cart));
  alert("üõí ƒê√£ th√™m v√†o gi·ªè!");
}

  window.logout = () => {
    localStorage.clear();
    window.location.href = "login.html";
  };

  // üü¶ G·ªçi h√†m ch√≠nh
  loadSuggestions();
  loadPopular();
  loadCombos();
});
